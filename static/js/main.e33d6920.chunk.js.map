{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setselectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAH,GAI3B,IAHLC,EAAI,EAAJA,KACAC,EAAa,EAAbA,cACAC,EAAa,EAAbA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAe,UAC1B,qBAAKO,UAAU,gBAAe,SAC5B,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UACEE,IAAW,CACT,YAAaN,EAAYG,KAAOD,EAAIC,KAGxC,UAAQ,MAAK,SAGb,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHV,IAAkBI,EAAIC,IACxBJ,EAAcG,IAEhB,SAEDA,EAAIO,SAXFP,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAAY,SAC7B,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaU,cCxCTb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAAG,mBAAhDG,EAAW,KAAEa,EAAc,KAMlC,OACE,sBAAKT,UAAU,UAAS,UACtB,oBAAIA,UAAU,QAAO,mCACY,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaS,SAEnC,cAAC,EAAI,CACHZ,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAZc,SAACG,GACnBW,EAAeX,UCdnBY,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.e33d6920.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tabs';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={\n                classNames({\n                  'is-active': selectedTab.id === tab.id,\n                })\n              }\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setselectedTab] = useState(tabs[0]);\n\n  const tabSelector = (tab: Tab) => {\n    setselectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={tabSelector}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}